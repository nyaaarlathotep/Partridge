// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package dao

import (
	"time"
)

const TableNameEhentaiGallery = "ehentai_gallery"

// EhentaiGallery mapped from table <ehentai_gallery>
type EhentaiGallery struct {
	GID           int64     `gorm:"column:GID;type:bigint;primaryKey" json:"GID"` // ehentai gallery id
	ELEID         int64     `gorm:"column:ELE_ID;type:bigint" json:"ELE_ID"`
	TITLE         string    `gorm:"column:TITLE;type:varchar(255)" json:"TITLE"`
	TITLEJPN      string    `gorm:"column:TITLE_JPN;type:varchar(255)" json:"TITLE_JPN"`
	CATEGORY      int32     `gorm:"column:CATEGORY;type:int" json:"CATEGORY"`               // gallery分类
	UPLOADER      string    `gorm:"column:UPLOADER;type:varchar(255)" json:"UPLOADER"`      // 上传者
	RATING        float64   `gorm:"column:RATING;type:double" json:"RATING"`                // 评分
	RATINGCOUNT   int32     `gorm:"column:RATING_COUNT;type:int" json:"RATING_COUNT"`       // 评分人数
	PAGES         int32     `gorm:"column:PAGES;type:int" json:"PAGES"`                     // 总页数
	PREVIEWPAGE   int32     `gorm:"column:PREVIEW_PAGE;type:int" json:"PREVIEW_PAGE"`       // 预览画廊对应页
	TOKEN         string    `gorm:"column:TOKEN;type:varchar(64)" json:"TOKEN"`             // gtoken
	POSTED        time.Time `gorm:"column:POSTED;type:datetime" json:"POSTED"`              // 上传时间
	FAVORITECOUNT int32     `gorm:"column:FAVORITE_COUNT;type:int" json:"FAVORITE_COUNT"`   // 喜爱数
	CASHEDFLAG    int32     `gorm:"column:CASHED_FLAG;type:tinyint" json:"CASHED_FLAG"`     // (0-否;1-是)
	DOWNLOADFLAG  int32     `gorm:"column:DOWNLOAD_FLAG;type:tinyint" json:"DOWNLOAD_FLAG"` // (0-否;1-是)
	CreatedAt     time.Time `gorm:"column:CREATED_TIME;type:datetime" json:"CREATED_TIME"`
	UpdatedAt     time.Time `gorm:"column:UPDATED_TIME;type:datetime" json:"UPDATED_TIME"`
}

// TableName EhentaiGallery's table name
func (*EhentaiGallery) TableName() string {
	return TableNameEhentaiGallery
}
